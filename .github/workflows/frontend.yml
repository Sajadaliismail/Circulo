name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Build the React app
      - name: Build React App with Environment Variables
        run: |
          echo "Building frontend service..."
          cd frontend
          npm install
          REACT_APP_USER_BACKEND=/api/auth \
          REACT_APP_POST_BACKEND=/api/posts \
          REACT_APP_CHAT_BACKEND=/api/chat \
          REACT_APP_FRIENDS_BACKEND=/api/friends \
          REACT_APP_CHAT_SERVER_URL=/api/socket \
          REACT_APP_LOCATION_API=${{ secrets.LOCATION_API_KEY }} \
          REACT_APP_CLOUD_NAME=dwlegfkli \
          REACT_APP_API_KEY=${{ secrets.CLOUDINARY_API_KEY }} \
          REACT_APP_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }} \
          REACT_APP_CLOUDINARY_URL=https://api.cloudinary.com/v1_1/dwlegfkli/image/upload \
          npm run build || true
          echo "React app build complete!"

      # Build the Docker image with the production build of React
      - name: Build Docker image for frontend service
        run: |
          echo "Building Docker image for frontend service..."
          docker build -t frontend-service:latest -f frontend/Dockerfile .

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to DockerHub
        run: |
          echo "Pushing frontend Docker image to DockerHub..."
          docker tag frontend-service:latest ${{ secrets.DOCKER_USERNAME }}/frontend-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend-service:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Production
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > key.pem
          chmod 600 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@ec2-65-0-173-200.ap-south-1.compute.amazonaws.com << EOF
            docker image prune -a -f
            docker pull ${{ secrets.DOCKER_USERNAME }}/frontend-service:latest
            docker-compose -f /home/ec2-user/circulo/docker-compose.yml up -d 
          EOF
